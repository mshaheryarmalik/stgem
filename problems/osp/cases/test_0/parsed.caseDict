/*---------------------------------*- C++ -*----------------------------------*\
filetype dictionary; coding utf-8; version 0.1; local --; purpose --;
\*----------------------------------------------------------------------------*/
#include paramDict
_environment
{
    libSource                 'D:/Shaheryar/EDISS/MDU/Thesis/STGEMv1/problems/osp/gunnerus-dp/fmus';
}
systemStructure
{
    connections
    {
        box_reference_to_reference_model
        {
            source
            {
                component        box_reference;
                connector        box_reference_position_setpoint;
            }
            target
            {
                component        reference_model;
                connector        reference_model_position_setpoint;
            }
        }
        reference_model_to_dp_controller
        {
            source
            {
                component        reference_model;
                connector        reference_model_desired_position;
            }
            target
            {
                component        dp_controller;
                connector        dp_controller_position_setpoint;
            }
        }
        reference_model_to_dp_controller_02
        {
            source
            {
                component        reference_model;
                connector        reference_model_desired_velocity;
            }
            target
            {
                component        dp_controller;
                connector        dp_controller_velocity_setpoint;
            }
        }
        reference_model_to_dp_controller_03
        {
            source
            {
                component        reference_model;
                connector        reference_model_desired_acceleration;
            }
            target
            {
                component        dp_controller;
                connector        dp_controller_acceleration_setpoint;
            }
        }
        dp_controller_to_thruster_dynamics
        {
            source
            {
                component        dp_controller;
                connector        dp_controller_thrust_command;
            }
            target
            {
                component        thruster_dynamics;
                connector        thruster_dynamics_thrust_command;
            }
        }
        vessel_model_to_dp_controller
        {
            source
            {
                component        vessel_model;
                connector        vessel_model_position_3dof;
            }
            target
            {
                component        dp_controller;
                connector        dp_controller_position_3dof;
            }
        }
        vessel_model_to_dp_controller_02
        {
            source
            {
                component        vessel_model;
                connector        vessel_model_velocity_3dof;
            }
            target
            {
                component        dp_controller;
                connector        dp_controller_velocity_3dof;
            }
        }
        thruster_dynamics_to_vessel_model
        {
            source
            {
                component        thruster_dynamics;
                connector        thruster_dynamics_thrust;
            }
            target
            {
                component        vessel_model;
                connector        vessel_model_thrust;
            }
        }
        current_model_to_vessel_model
        {
            source
            {
                component        current_model;
                connector        current_model_current_velocity;
            }
            target
            {
                component        vessel_model;
                connector        vessel_model_current_velocity;
            }
        }
    }
    components
    {
        box_reference
        {
            connectors
            {
                box_reference_position_setpoint
                {
                    variableGroup        position_setpoint;
                    type        output;
                }
            }
            fmu               BoxReference.fmu;
            stepSize          0.1;
        }
        reference_model
        {
            connectors
            {
                reference_model_position_setpoint
                {
                    variableGroup        position_setpoint;
                    type        input;
                }
                reference_model_desired_position
                {
                    variableGroup        desired_position;
                    type        output;
                }
                reference_model_desired_velocity
                {
                    variableGroup        desired_velocity;
                    type        output;
                }
                reference_model_desired_acceleration
                {
                    variableGroup        desired_acceleration;
                    type        output;
                }
            }
            fmu               ReferenceModel.fmu;
            stepSize          0.1;
        }
        dp_controller
        {
            connectors
            {
                dp_controller_position_setpoint
                {
                    variableGroup        position_setpoint;
                    type        input;
                }
                dp_controller_velocity_setpoint
                {
                    variableGroup        velocity_setpoint;
                    type        input;
                }
                dp_controller_acceleration_setpoint
                {
                    variableGroup        acceleration_setpoint;
                    type        input;
                }
                dp_controller_thrust_command
                {
                    variableGroup        thrust_command;
                    type        output;
                }
                dp_controller_position_3dof
                {
                    variableGroup        position_3dof;
                    type        input;
                }
                dp_controller_velocity_3dof
                {
                    variableGroup        velocity_3dof;
                    type        input;
                }
            }
            fmu               DPController.fmu;
            stepSize          0.1;
        }
        thruster_dynamics
        {
            connectors
            {
                thruster_dynamics_thrust_command
                {
                    variableGroup        thrust_command;
                    type        input;
                }
                thruster_dynamics_thrust
                {
                    variableGroup        thrust;
                    type        output;
                }
            }
            fmu               ThrusterDynamics.fmu;
            stepSize          0.1;
        }
        current_model
        {
            connectors
            {
                current_model_current_velocity
                {
                    variableGroup        current_velocity;
                    type        output;
                }
            }
            fmu               CurrentModel.fmu;
            stepSize          0.1;
        }
        vessel_model
        {
            connectors
            {
                vessel_model_position_3dof
                {
                    variableGroup        position_3dof;
                    type        output;
                }
                vessel_model_velocity_3dof
                {
                    variableGroup        velocity_3dof;
                    type        output;
                }
                vessel_model_thrust
                {
                    variableGroup        thrust;
                    type        input;
                }
                vessel_model_current_velocity
                {
                    variableGroup        current_velocity;
                    type        input;
                }
            }
            initialize
            {
                Current_Velocity[1]
                {
                    start        5.828980373753698;
                }
                Current_Velocity[2]
                {
                    start        3.6032820607776594;
                }
            }
            fmu               VesselModel.fmu;
            stepSize          0.1;
        }
    }
}
run
{
    simulation
    {
        name                  OspSystemStructure;
        startTime             0.0;
        baseStepSize          0.1;
        algorithm             fixedStep;
    }
}
current_velocity0             5.828980373753698;
current_velocity1             3.6032820607776594;
_case
{
    case                      test_0;
    layer                     '';
    level                     0;
    index                     0;
    path                      'cases\test_0';
    is_leaf                   true;
    no_of_samples             0;
    condition
    {
    }
    parameters
    {
        current_velocity0        5.828980373753698;
        current_velocity1        3.6032820607776594;
    }
    commands
    {
        prepare
        (
            'copy ..\..\gunnerus-dp\template\caseDict .'    'dictParser caseDict'    'ospCaseBuilder parsed.caseDict'
        );
        run
        (
            'cosim run OspSystemStructure.xml -b 0 -d 3600'
        );
        post
        (
            'watchCosim -d -p watchDict'
        );
    }
    status                    CaseStatus.NONE;
}
